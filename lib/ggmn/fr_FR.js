"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ggmn_fr_FR = void 0;

var _Types = require("../Types");

/**
 * Do not edit this file directly. 
 * Instead, edit the appropriate spreadsheet 
 * https://docs.google.com/spreadsheets/d/102zLqEWj4xlqqNgVUFCiMLqdcvaLY6GntS1xmlHdAE8/edit#gid=0
 * and recompile in order to change these fields
 */
var ggmn_fr_FR = {
  org: _Types.TranslationOrg.ggmn,
  overrides: {
    settings_connect_to_pending_title: "Connection au GGMN",
    settings_connect_to_connected_title: "Connecté au GGMN",
    settings_connect_to_subtitle_error: "Erreur de connection au GGMN",
    settings_sync_heading: "Synchronisation au GGMN",
    settings_new_resource: "Nouvelle station de suivi",
    search_hint: "Rechercher une station de suivi par identifiant.",
    new_reading_warning_login_required: "Mesure sauvegardée localement. Veuillez vous identifier dans MyWell pour l'enregistrer.",
    new_reading_value_field: function new_reading_value_field(units) {
      return "Mesures en ".concat(units);
    },
    new_reading_value_field_invalid: "Mesure invalide",
    connect_to_service_description: "Connectez-vous au GGMN pour créer de nouvelles stations de suivi et enregistrer des mesures à partir de votre appareil mobile.",
    connect_to_service_connected_test: function connect_to_service_connected_test(fieldName, username) {
      return "Vous \xEAtes connect\xE9 au GGMN en tant que ".concat(fieldName, ": ").concat(username);
    },
    recent_resource_none: "Pas de ressources récentes",
    resource_detail_new: "Nouvelle mesure",
    sync_login_message: "Identifiez-vous pour synchroniser votre appareil avec le GGMN.",
    sync_start_sync_button_loading: "Synchronisation au GGMN",
    sync_section_resources: "Stations de suivi",
    sync_empty_content: "",
    resource_detail_empty_heading: "Aucune station de suivi n'a pu être trouvée pour l'instant.",
    new_resource_saved_dialog_warning: "La position a été sauvegardée localement. Identifiez-vous pour synchroniser votre appareil avec le GGMN.",
    resource_name: "Station de suivi",
    timeseries_name_title: function timeseries_name_title(tsName) {
      switch (tsName.toLowerCase()) {
        case 'gwmbgs':
          return "Groundwater level below ground surface";

        case 'gwmmsl':
        default:
          return "Groundwater level below ground surface";
      }
    },
    sync_manual_text: "Les stations de suivi doivent être synchronisées manuellement",
    sync_screen_heading: "Pour finir d'enregistrer les stations de suivi dans le GGMN, veuillez les enregistrer manuellenet sur le site du GGMN.",
    sync_screen_step_1_body: "Cliquez sur 'Envoyer un courriel' ci-dessous pour envoyer un courriel à votre compte GGMN. Le courriel contiendra les fichiers shapefile nécessaires à l'enregistrement des stations.",
    sync_screen_step_2_body: "Après réception du courriel, connectez-vous au GGMN sur https://ggmn.un-igrac.org/ and sélectionnez 'Téléverser' dans le coin supérieur droit.",
    sync_screen_step_3_body: "Défilez vers le bas jusqu'à 'Importer un fichier SufHyd ou shapefile'. Sélectionnez l'organisation à laquelle votre compte est associé, ainsi que le fichier du courriel.",
    sync_screen_step_4_body: "Ensuite, connectez-vous au GGMN sur votre appareil mobile. Les stations de suivi auront changé de couleur, et les mesures en attente vont être enregistrées.",
    sync_screen_help_body: "Contactez ____ via ____. Nous ferons de notre mieux pour vous aider.",
    sync_screen_step_5_body: "Ensuite, connectez-vous au GGMN sur votre appareil mobile. Les stations de suivi auront changé de couleur, et les mesures en attente vont être enregistrées.",
    sync_screen_help_email: "",
    sync_screen_help_end: ""
  }
};
exports.ggmn_fr_FR = ggmn_fr_FR;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,