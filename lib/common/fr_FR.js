"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.fr_FR = void 0;

/**
 * Do not edit this file directly. 
 * Instead, edit the appropriate spreadsheet 
 * https://docs.google.com/spreadsheets/d/102zLqEWj4xlqqNgVUFCiMLqdcvaLY6GntS1xmlHdAE8/edit#gid=0
 * and recompile in order to change these fields
 */
var fr_FR = {
  metadata: {
    language: 'Fran√ßais',
    region: 'France'
  },
  templates: {
    app_resource_load_error: "ERROR LOADING LOCATIONS. PLEASE TRY AGAIN.",
    app_resource_not_found: "COULD NOT FIND THE SELECTED READING LOCATION",
    settings_connect_to_pending_title: "OVERRIDE",
    settings_connect_to_connected_title: "OVERRIDE",
    settings_connect_to_subtitle_error: "OVERRIDE",
    settings_login_error: "ERROR LOGGING IN.",
    settings_sync_heading: "MYWELL SYNC",
    settings_new_resource: "NEW READING LOCATION",
    search_heading: "SEARCH",
    search_error: "COULDN'T PERFORM SEARCH. PLEASE TRY AGAIN.",
    search_more: "MORE...",
    search_no_results: "NO RESULTS FOUND",
    search_hint: "SEARCH BY ID",
    search_recent_searches: "RECENT SEARCHES",
    search_offline_line_1: "YOU ARE CURRENTLY OFFLINE.",
    search_offline_line_2: "SHOWING LIMITED SEARCH RESULTS.",
    new_reading_invalid_error_heading: "ERROR",
    new_reading_invalid_error_description: "INVALID READING. PLEASE CHECK AND TRY AGAIN.",
    new_reading_invalid_error_ok: "OK",
    new_reading_unknown_error_heading: "ERROR",
    new_reading_unknown_error_description: "THERE WAS A PROBLEM SAVING YOUR READING. PLEASE TRY AGAIN.",
    new_reading_unknown_error_ok: "OK",
    new_reading_saved_popup_title: "",
    new_reading_saved: "READING SAVED",
    new_reading_warning_login_required: "READING SAVED LOCALLY ONLY. LOGIN WITH MYWELL TO SAVE IN CLOUD.",
    new_reading_dialog_one_more: "ONE MORE",
    new_reading_dialog_done: "DONE",
    new_reading_date_field: "READING DATE",
    new_reading_date_field_invalid: "INVALID DATE",
    new_reading_value_field: function new_reading_value_field(units) {
      return "MEASUREMENT IN ".concat(units);
    },
    new_reading_value_field_invalid: "INVALID MEASUREMENT",
    new_reading_timeseries: "READING TYPE",
    new_reading_save_button: "SAVE",
    connect_to_service_username_field: "USERNAME",
    connect_to_service_username_invalid: "IS REQUIRED.",
    connect_to_service_password_field: "PASSWORD",
    connect_to_service_password_invalid: "IS REQUIRED.",
    connect_to_service_mobile_field: "PHONE NUMBER",
    connect_to_service_mobile_invalid: "PHONE NUMBER IS REQUIRED",
    connect_to_service_verify_field: "ENTER THE 4 DIGIT CODE WE SENT YOU.",
    connect_to_service_verify_invalid: "YOU ENTERED THE WRONG CODE. PLEASE TRY AGAIN.",
    connect_to_service_logout_button: "LOG OUT",
    connect_to_service_submit_button: "SUBMIT",
    connect_to_service_description: "CONNECT TO N/A TO CREATE NEW WELLS AND SAVE READINGS FROM YOUR DEVICE.",
    connect_to_service_connected_test: function connect_to_service_connected_test(fieldname, username) {
      return "YOU ARE CONNECTED TO MYWELL WITH THE ".concat(fieldname, ": ").concat(username);
    },
    connect_to_service_error: "ERROR SIGNING IN. PLEASE TRY AGAIN",
    connect_to_service_org_selector: "N/A",
    favourite_resource_heading: "FAVOURITES",
    favourite_resource_hint_1: "PRESS THE",
    favourite_resource_hint_2: "BUTTON TO ADD A FAVOURITE",
    recent_resource_heading: "RECENTS",
    recent_resource_none: "NO RECENT LOCATIONS",
    resource_detail_latest: "LATEST READINGS:",
    resource_detail_new: "NEW READING",
    sync_login_message: "LOGIN TO SYNC WITH MYWELL",
    sync_start_sync_button: "START SYNC",
    sync_start_sync_button_loading: "SYNCING WITH MYWELL",
    sync_section_resources: "READING LOCATIONS",
    sync_section_readings: "READINGS",
    sync_empty_heading: "NOTHING TO SYNC!",
    sync_empty_content: "START TAKING READINGS OR CREATING GROUNDWATER STATIONS TO GET STARTED.",
    select_language_heading: "SELECT A LANGUAGE",
    resource_detail_summary_tab: "SUMMARY",
    resource_detail_empty_heading: "YOU HAVEN'T FOUND ANY READING LOCATIONS YET.",
    resource_detail_empty_hint: "PRESS THE QR SCANNER OR SEARCH FOR A READING TYPE TO FIND A READING LOCATION.",
    new_resource_saved_dialog: "SUCCESSFULLY SAVED  READING LOCATION!",
    new_resource_saved_dialog_warning: "SAVED LOCATION LOCALLY. LOGIN TO MYWELL TO SYNC.",
    resource_name: "READING LOCATIONS",
    new_resource_lat: "LATITUDE",
    new_resource_lng: "LONGITUDE",
    new_resource_asset_type_label: "READING LOCATION TYPE",
    new_resource_owner_name_label: "OWNER NAME",
    new_resource_submit_button: "SUBMIT",
    resource_detail_name_label: "NAME",
    new_resource_id: "ID",
    new_resource_id_check_error: "ERROR CHECKING THE ID. PLEASE TRY AGAIN.",
    new_resource_id_check_taken: "ID IS NOT VALID OR ALREADY TAKEN.",
    qr_code_not_found: "",
    calendar_input_confirm: "",
    calendar_input_cancel: "",
    timeseries_name_title: function timeseries_name_title(tsName) {
      switch (tsName.toLowerCase()) {
        case 'gwmbgs':
          return "Groundwater level below ground surface";

        case 'gwmmsl':
        default:
          return "Groundwater level below ground surface";
      }
    }
  }
};
exports.fr_FR = fr_FR;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,