"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.fr_FR = void 0;

/**
 * Do not edit this file directly. 
 * Instead, edit the appropriate spreadsheet 
 * https://docs.google.com/spreadsheets/d/102zLqEWj4xlqqNgVUFCiMLqdcvaLY6GntS1xmlHdAE8/edit#gid=0
 * and recompile in order to change these fields
 */
var fr_FR = {
  metadata: {
    language: 'Français',
    region: 'France'
  },
  templates: {
    app_resource_load_error: "Erreur de chargement des positions. Veuillez réessayer.",
    app_resource_not_found: "La position sélectionnée n'a pu être trouvée.",
    settings_connect_to_pending_title: "Connection au GGMN",
    settings_connect_to_connected_title: "Connecté au GGMN",
    settings_connect_to_subtitle_error: "Erreur de connection au GGMN",
    settings_login_error: "Erreur d'identification",
    settings_sync_heading: "Synchronisation au GGMN",
    settings_new_resource: "Nouvelle station de suivi",
    search_heading: "Recherche",
    search_error: "Recherche impossible. Veuillez réessayer.",
    search_more: "Plus...",
    search_no_results: "Pas de résultats",
    search_hint: "Rechercher une station de suivi par identifiant.",
    search_recent_searches: "Recherches récentes",
    search_offline_line_1: "Vous êtes actuellement hors-ligne.",
    search_offline_line_2: "Montrer moins de résultats.",
    new_reading_invalid_error_heading: "Erreur",
    new_reading_invalid_error_description: "Mesure invalide. Veuillez contrôler et réessayer.",
    new_reading_invalid_error_ok: "OK",
    new_reading_unknown_error_heading: "Erreur",
    new_reading_unknown_error_description: "Une erreur s'est produite durant l'enregistrement de votre mesure. Veuillez réessayer.",
    new_reading_unknown_error_ok: "OK",
    new_reading_saved_popup_title: "",
    new_reading_saved: "Mesure enregistrée",
    new_reading_warning_login_required: "Mesure sauvegardée localement. Veuillez vous identifier dans MyWell pour l'enregistrer.",
    new_reading_dialog_one_more: "Ajouter une mesure",
    new_reading_dialog_done: "Terminé",
    new_reading_date_field: "Lecture de la date",
    new_reading_date_field_invalid: "Date invalide",
    new_reading_value_field: function new_reading_value_field(units) {
      return "Mesures en ".concat(units);
    },
    new_reading_value_field_invalid: "Mesure invalide",
    new_reading_timeseries: "Série temporelle",
    new_reading_save_button: "Enregistrer",
    connect_to_service_username_field: "Nom d'utilisateur",
    connect_to_service_username_invalid: "Requis",
    connect_to_service_password_field: "Mot de passe",
    connect_to_service_password_invalid: "Requis",
    connect_to_service_mobile_field: "Numéro de téléphone",
    connect_to_service_mobile_invalid: "Numéro de téléphone requis",
    connect_to_service_verify_field: "Entrer le code à 4 chiffres qui vous a été envoyé.",
    connect_to_service_verify_invalid: "Ce code est invalide. Veuillez réessayer.",
    connect_to_service_logout_button: "Quitter",
    connect_to_service_submit_button: "Envoyer",
    connect_to_service_description: "Connectez-vous au GGMN pour créer de nouvelles stations de suivi et enregistrer des mesures à partir de votre appareil mobile.",
    connect_to_service_connected_test: function connect_to_service_connected_test(fieldName, username) {
      return "Vous \xEAtes connect\xE9 au GGMN en tant que ".concat(fieldName, ": ").concat(username);
    },
    connect_to_service_error: "Erreur d'identification. Veuillez réessayer.",
    connect_to_service_org_selector: "Sélectionner une organisation",
    favourite_resource_heading: "Favoris",
    favourite_resource_hint_1: "Cliquer sur",
    favourite_resource_hint_2: "le bouton pour ajouter un favori",
    recent_resource_heading: "Récents",
    recent_resource_none: "Pas de station récente",
    resource_detail_latest: "Dernières mesures",
    resource_detail_new: "Nouvelle mesure",
    sync_login_message: "Identifiez-vous pour synchroniser votre appareil avec le GGMN.",
    sync_start_sync_button: "Démarrer la synchronisation",
    sync_start_sync_button_loading: "Synchronisation au GGMN",
    sync_section_resources: "Stations de suivi",
    sync_section_readings: "Mesures",
    sync_empty_heading: "Rien à synchroniser!",
    sync_empty_content: "Vous devez d'abord enregistrer des mesures ou créer une station de suivi.",
    select_language_heading: "Choisissez une langue",
    resource_detail_summary_tab: "Résumé",
    resource_detail_empty_heading: "Aucune station de suivi n'a pu être trouvée pour l'instant.",
    resource_detail_empty_hint: "Cliquez sur le bouton de recherche ou utiliser le navigateur de carte pour en trouver une.",
    new_resource_saved_dialog: "La station de suivi a été correctement enregistrée.",
    new_resource_saved_dialog_warning: "La position a été sauvegardée localement. Identifiez-vous pour synchroniser votre appareil avec le GGMN.",
    resource_name: "Station de suivi",
    new_resource_lat: "Latitude",
    new_resource_lng: "Longitude",
    new_resource_asset_type_label: "Type de station",
    new_resource_owner_name_label: "Nom du propriétaire*",
    new_resource_submit_button: "Envoyer",
    resource_detail_name_label: "Nom",
    new_resource_id: "Identifiant",
    new_resource_id_check_error: "Erreur de verification de l'identifiant. Veuillez réessayer.",
    new_resource_id_check_taken: "L'identifiant n'est pas valide ou est déjà attribué.",
    qr_code_not_found: "La position n'a pu être trouvée",
    calendar_input_confirm: "Confirmer",
    calendar_input_cancel: "Annuler",
    timeseries_name_title: function timeseries_name_title(tsName) {
      switch (tsName.toLowerCase()) {
        case 'gwmbgs':
          return "Niveau d'eau sous la surface";

        case 'gwmmsl':
        default:
          return "Niveau d'eau au-dessus du niveau de la mer";
      }
    },
    resource_detail_heading_label: "Identifiant:",
    timeseries_date_format: "DD-MM-YYYY",
    resource_detail_new_reading_button: "Nouvelle mesure",
    sync_manual_text: "Les stations de suivi doivent être synchronisées manuellement",
    sync_manual_show_me_how: "Montrez-moi comment",
    sync_date_format: "DD-MM-YYYY",
    sync_error_station_not_created: "La station n'a pas encore été créée.",
    sync_error_get_timeseries_id_transport: "La demande a échoué. Veuillez réessayer.",
    sync_error_get_timeseries_id_none: "La série temporelle n'a pu être trouvée.",
    sync_error_get_timeseries_id_too_many: "La série temporelle n'a pu être trouvée.",
    sync_error_get_timeseries_id_no_timeseries: "La série temporelle n'a pu être trouvée.",
    sync_error_save_reading_not_logged_in: "Vous devez être connecté pour effectuer la synchronisation.",
    sync_error_generic_transport: "La demande a échoué. Veuillez réessayer.",
    sync_error_save_reading_unknown: "Une erreur inconnue s'est produite.",
    sync_error_delete_pending_reading: "Erreur lors du nettoyage",
    sync_error_unknown: "Une erreur inconnue s'est produite.",
    sync_email_error: "Une erreur s'est produite lors de l'envoi du courriel. Veuillez réessayer.",
    sync_email_success: "Courriel envoyé!",
    sync_screen_heading: "Pour finir d'enregistrer les stations de suivi dans le GGMN, veuillez les enregistrer manuellenet sur le site du GGMN.",
    sync_screen_step_1_heading: "Étape 1.",
    sync_screen_step_1_body: "Cliquez sur 'Envoyer un courriel' ci-dessous pour envoyer un courriel à votre compte GGMN. Le courriel contiendra les fichiers shapefile nécessaires à l'enregistrement des stations.",
    sync_screen_step_2_heading: "Étape 2.",
    sync_screen_step_2_body: "Une fois le courriel reçu, identifiez-vous sur le site du GGMN (https://ggmn.un-igrac.org/) et chargez les fichiers dans l'espace de travail de votre organisation.",
    sync_screen_step_3_heading: "Étape 3.",
    sync_screen_step_3_body: "Retournez sur l'application du GGMN. Vous devriez voir que les stations de suivi ont changé de couleur et que les mesures en attente peuvent être sauvegardées.",
    sync_screen_step_4_heading: "",
    sync_screen_step_4_body: "",
    sync_screen_help_heading: "Besoin d'aide?",
    sync_screen_help_body: "Contactez ____ via ____. Nous ferons de notre mieux pour vous aider.",
    sync_screen_send_email_button: "Envoyer un courriel",
    settings_language: "Langue",
    timeseries_none: "Aucune série temporelle n'a été trouvée à cette station.",
    resource_detail_new_reading: "Nouvelle mesure",
    connect_to_error_message: "Erreur lors de l'identification. Veuillez réessayer.",
    connect_to_invalid_phone_number: "Le numéro de téléphone est invalide.",
    connect_to_login_code: function connect_to_login_code(mobile) {
      return "Entrez le code d'identification qui vous a \xE9t\xE9 envoy\xE9 au ".concat(mobile, ". Ou attendez que nous vous identifiions.");
    },
    connect_to_resend: "Vous n'avez pas reçu le message?",
    connect_to_signed_in_heading: "Vous êtes connecté.",
    connect_to_edit: "Modifier",
    connect_to_name_label: "Nom",
    connect_to_nickname_label: "Short Name",
    connect_to_email_label: "Email",
    connect_to_profile_mobile: "Mobile",
    connect_to_sign_out: "Sortir",
    menu_well: "Puits",
    menu_rainfall: "Precipitations",
    menu_water_quality: "Qualité de l'eau",
    menu_checkdam: "Barrage",
    scan_hint: "Scanner une position à l'aide d'un code QR",
    sync_screen_step_5_heading: "est requis.",
    sync_screen_step_5_body: "",
    timeseries_card_not_enough: "Not enough readings for this time range.",
    resource_detail_edit_resource: "Nombre de lectures insuffisant pour ce laps de temps.",
    resource_detail_edit_readings: "Modifier la station",
    new_resource_name: "Modifier les mesures",
    edit_resource_delete_button: "est requis.",
    general_is_required_error: "Nom:",
    sync_screen_help_email: "Supprimer",
    sync_screen_help_end: "claudia.ruz-vargas@un-igrac.org",
    resource_email_subject: "Nous serons heureux de vous aider.",
    resource_email_message: "GGMN Manual Resources",
    resource_loading_error: "Voici votre shapefile et vos fichiers csv pour la synchronisation manuelle au GGMN. <br/>Allez sur https://ggmn.un-igrac.org/ pour commencer. <br/><strong>Attention:</strong>Si une station a un identifiant déjà attribué, la nouvelle station sera supprimée et les mesures seront ajoutées à la station existante. Vérifiez que vos stations ont des identifiants distincts.",
    timeseries_loading_error: "Erreur de chargement de la station",
    connect_to_login_error: "Erreur de chargement des mesures",
    edit_resource_delete_modal_title: "Erreur d'identification",
    edit_resource_delete_modal_text: "Etes-vous certain?",
    edit_resource_delete_modal_ok: "Supprimer cette station entraînera la suppression définitive des mesures.",
    edit_resource_delete_modal_cancel: "Supprimer",
    settings_pending_heading: "Annuler",
    new_resource_water_column_height: "Sauver les ressources en cours",
    pending_status_rejected: "Elévation (m):",
    pending_status_unapproved: "",
    pending_status_approved: "",
    resource_detail_sync_required: "Location needs to be synced before you can save any readings.",
    about_html: "<h2>MyWell</h2>",
    settings_about: "ABOUT MYWELL",
    powered_by_html: "",
    long_date_format: "DD-MM-YYYY h:mm",
    default_datetime_format: "HH:MM DD/MM/Y",
    pending_resource_heading: "Pending Resources",
    resource_detail_owner_section: "About:",
    resource_detail_owner_name: "Owner Name",
    open_url_error: "Can' open url",
    edit_readings_no_readings: "No Pending Readings for this Station",
    edit_readings_new_reading: "New Reading",
    settings_map: "Browse on Map",
    menu_browse_text: "Browse",
    menu_scan_text: "Scan",
    menu_search_text: "Search",
    menu_new_text: "New",
    country_label: "Country",
    pincode_invalid_message: "Pincode is not valid",
    connect_to_edit_heading: "Tell Us More About Yourself",
    connect_to_invalid_message: "is not valid.",
    unapproved: "unapproved",
    approved: "approved",
    rejected: "rejected",
    unapproved_description: "We're still waiting for an admin to verify your account.",
    approved_description: "Your account is approved! Feel free to sync measurements and locations now.",
    rejected_description: "Your account has been rejected. Reach out to ___@___ to learn more.",
    formatSubtitlekey: function formatSubtitlekey(key) {
      switch (key) {
        case 'legacyResourceId':
          return 'OldId';

        case 'pincode':
          return 'Pincode';

        case 'country':
          return 'Country';

        default:
          return key;
      }
    }
  }
};
exports.fr_FR = fr_FR;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,