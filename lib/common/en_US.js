"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.en_US = void 0;

/**
 * Do not edit this file directly. 
 * Instead, edit the appropriate spreadsheet 
 * https://docs.google.com/spreadsheets/d/102zLqEWj4xlqqNgVUFCiMLqdcvaLY6GntS1xmlHdAE8/edit#gid=0
 * and recompile in order to change these fields
 */
var en_US = {
  metadata: {
    language: 'english',
    region: 'united states'
  },
  templates: {
    app_resource_load_error: "Error loading reading locations. Please try again.",
    app_resource_not_found: "Could not find the selected reading location",
    settings_connect_to_pending_title: "OVERRIDE",
    settings_connect_to_connected_title: "OVERRIDE",
    settings_connect_to_subtitle_error: "OVERRIDE",
    settings_login_error: "Error logging in.",
    settings_sync_heading: "MyWell Sync",
    settings_new_resource: "New reading Location",
    search_heading: "Search",
    search_error: "Couldn't perform search. Please try again.",
    search_more: "More...",
    search_no_results: "No Results Found",
    search_hint: "Search By Id",
    search_recent_searches: "Recent Searches",
    search_offline_line_1: "You are currently offline.",
    search_offline_line_2: "Showing limited search results.",
    new_reading_invalid_error_heading: "Error",
    new_reading_invalid_error_description: "Invalid reading. Please check and try again.",
    new_reading_invalid_error_ok: "OK",
    new_reading_unknown_error_heading: "Error",
    new_reading_unknown_error_description: "There was a problem saving your reading. Please try again.",
    new_reading_unknown_error_ok: "OK",
    new_reading_saved_popup_title: "",
    new_reading_saved: "Reading Saved",
    new_reading_warning_login_required: "Reading saved locally only. Login with MyWell to save in cloud.",
    new_reading_dialog_one_more: "One More",
    new_reading_dialog_done: "Done",
    new_reading_date_field: "Reading Date",
    new_reading_date_field_invalid: "Invalid Date",
    new_reading_value_field: function new_reading_value_field(units) {
      return "Measurement in ".concat(units);
    },
    new_reading_value_field_invalid: "Invalid Measurement",
    new_reading_timeseries: "N/A",
    new_reading_save_button: "Save",
    connect_to_service_username_field: "N/A",
    connect_to_service_username_invalid: "N/A",
    connect_to_service_password_field: "N/A",
    connect_to_service_password_invalid: "N/A",
    connect_to_service_mobile_field: "Phone number",
    connect_to_service_mobile_invalid: "Phone number is required",
    connect_to_service_verify_field: "Enter the 4 digit code we sent you.",
    connect_to_service_verify_invalid: "You entered the wrong code. Please try again.",
    connect_to_service_logout_button: "Log Out",
    connect_to_service_submit_button: "",
    connect_to_service_description: "",
    connect_to_service_connected_test: function connect_to_service_connected_test(fieldName, username) {
      return "You are connected to MyWell with the ".concat(fieldName, ": ").concat(username);
    },
    connect_to_service_error: "Error signing in. Please try again",
    connect_to_service_org_selector: "N/A",
    favourite_resource_heading: "Favorites",
    favourite_resource_hint_1: "Press the",
    favourite_resource_hint_2: "button to add a favourite",
    recent_resource_heading: "Recents",
    recent_resource_none: "No recent locations",
    resource_detail_latest: "Latest readings",
    resource_detail_new: "New Reading",
    sync_login_message: "Login to sync with MyWell",
    sync_start_sync_button: "Start Sync",
    sync_start_sync_button_loading: "Syncing with MyWell",
    sync_section_resources: "Reading Locations",
    sync_section_readings: "Readings",
    sync_empty_heading: "Nothing to sync!",
    sync_empty_content: "Start taking readings or creating groundwater stations to get started.",
    select_language_heading: "",
    resource_detail_summary_tab: "",
    resource_detail_empty_heading: "",
    resource_detail_empty_hint: "",
    new_resource_saved_dialog: "",
    new_resource_saved_dialog_warning: "",
    resource_name: "",
    new_resource_lat: "",
    new_resource_lng: "",
    new_resource_asset_type_label: "",
    new_resource_owner_name_label: "",
    new_resource_submit_button: "",
    resource_detail_name_label: "",
    new_resource_id: "",
    new_resource_id_check_error: "",
    new_resource_id_check_taken: "",
    qr_code_not_found: "",
    calendar_input_confirm: "",
    calendar_input_cancel: "",
    timeseries_name_title: function timeseries_name_title(tsName) {
      switch (tsName.toLowerCase()) {
        case 'gwmbgs':
          return "Groundwater level below ground surface";

        case 'gwmmsl':
        default:
          return "Groundwater level below ground surface";
      }
    },
    resource_detail_heading_label: "ID: ",
    timeseries_date_format: "YYYY-MM-DD",
    resource_detail_new_reading_button: "NEW READING",
    sync_manual_text: "GROUNDWATER STATIONS NEED TO BE SYNCED MANUALLY",
    sync_manual_show_me_how: "SHOW ME HOW",
    sync_date_format: "YYYY-MM-DD",
    sync_error_station_not_created: "STATION HASN'T BEEN CREATED YET.",
    sync_error_get_timeseries_id_transport: "REQUEST FAILED OR TIMED OUT. PLEASE TRY AGAIN.",
    sync_error_get_timeseries_id_none: "COULD NOT FIND TIMESERIES",
    sync_error_get_timeseries_id_too_many: "COULD NOT FIND TIMESERIES",
    sync_error_get_timeseries_id_no_timeseries: "COULD NOT FIND TIMESERIES",
    sync_error_save_reading_not_logged_in: "YOU MUST BE LOGGED IN TO PERFORM A SYNC.",
    sync_error_generic_transport: "REQUEST FAILED OR TIMED OUT. PLEASE TRY AGAIN.",
    sync_error_save_reading_unknown: "AN UNKNOWN ERROR OCCOURED",
    sync_error_delete_pending_reading: "CLEANUP ERROR",
    sync_error_unknown: "AN UNKNOWN ERROR OCCOURED",
    sync_email_error: "THERE WAS A PROBLEM SENDING THE EMAIL. PLEASE TRY AGAIN.",
    sync_email_success: "EMAIL SENT!",
    sync_screen_heading: "IN ORDER TO FINISH SAVING YOUR GROUNDWATER STATIONS TO GGMN, YOU NEED TO MANUALLY REGISTER THEM ON THE GGMN SITE.",
    sync_screen_step_1_heading: "STEP 1.",
    sync_screen_step_1_body: "CLICK THE 'SEND EMAIL' BUTTON BELOW TO SEND AN EMAIL TO YOUR GGMN ACCOUNT. THIS EMAIL WILL CONTAIN THE SHAPEFILES NEEDED TO REGISTER THE GROUNDWATER STATIONS",
    sync_screen_step_2_heading: "STEP 2.",
    sync_screen_step_2_body: "ONCE YOU HAVE RECIEVED THE EMAIL, LOG INTO GGMN AT HTTPS://GGMN.UN-IGRAC.ORG/ AND SELECT 'UPLOAD' IN THE TOP RIGHT CORNER.",
    sync_screen_step_3_heading: "STEP 3.",
    sync_screen_step_3_body: "SCROLL DOWN TO 'IMPORT A SUFHYD OR SHAPE FILE' SELECT THE ORGANISATION YOUR ACCOUNT IS ASSOCIATED WITH, AND THE FILE FROM THE EMAIL.",
    sync_screen_step_4_heading: "STEP 4.",
    sync_screen_step_4_body: "ONCE THIS IS DONE, LOG BACK INTO GGMN ON YOUR DEVICE, AND YOU WILL SEE THAT RESOURCES HAVE CHANGED COLOR, AND AND PENDING REAADINGS WILL START TO SAVE.",
    sync_screen_help_heading: "NEED SOME HELP?",
    sync_screen_help_body: "JUST REACH OUT TO ____ AT ____. WE'D BE GLAD TO ASSIST YOU.",
    sync_screen_send_email_button: "SEND EMAIL",
    settings_language: "LANG",
    timeseries_none: "No timeseries found for this Station.",
    resource_detail_new_reading: "NEW READING",
    connect_to_error_message: "ERROR SIGNING IN. PLEASE TRY AGAIN.",
    connect_to_invalid_phone_number: "PHONE NUMBER IS INVALID",
    connect_to_login_code: function connect_to_login_code(mobile) {
      return "Enter the login code we sent to ".concat(mobile, ". Or wait as we verify you automatically");
    },
    connect_to_resend: "DIDN'T GET THE TEXT?",
    connect_to_signed_in_heading: "YOU ARE SIGNED IN.",
    connect_to_edit: "EDIT",
    connect_to_name_label: "FULL NAME",
    connect_to_nickname_label: "SHORT NAME",
    connect_to_email_label: "EMAIL",
    connect_to_profile_mobile: "MOBILE",
    connect_to_sign_out: "SIGN OUT",
    menu_well: "WELLS",
    menu_rainfall: "RAINFALL",
    menu_water_quality: "WATER QUALITY",
    menu_checkdam: "CHECKDAMS",
    scan_hint: "",
    sync_screen_step_5_heading: "",
    sync_screen_step_5_body: "",
    timeseries_card_not_enough: "",
    resource_detail_edit_resource: "",
    resource_detail_edit_readings: "",
    new_resource_name: "",
    edit_resource_delete_button: "",
    general_is_required_error: "",
    sync_screen_help_email: "",
    sync_screen_help_end: "",
    resource_email_subject: "",
    resource_email_message: ""
  }
};
exports.en_US = en_US;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jb21tb24vZW5fVVMudHMiXSwibmFtZXMiOlsiZW5fVVMiLCJtZXRhZGF0YSIsImxhbmd1YWdlIiwicmVnaW9uIiwidGVtcGxhdGVzIiwiYXBwX3Jlc291cmNlX2xvYWRfZXJyb3IiLCJhcHBfcmVzb3VyY2Vfbm90X2ZvdW5kIiwic2V0dGluZ3NfY29ubmVjdF90b19wZW5kaW5nX3RpdGxlIiwic2V0dGluZ3NfY29ubmVjdF90b19jb25uZWN0ZWRfdGl0bGUiLCJzZXR0aW5nc19jb25uZWN0X3RvX3N1YnRpdGxlX2Vycm9yIiwic2V0dGluZ3NfbG9naW5fZXJyb3IiLCJzZXR0aW5nc19zeW5jX2hlYWRpbmciLCJzZXR0aW5nc19uZXdfcmVzb3VyY2UiLCJzZWFyY2hfaGVhZGluZyIsInNlYXJjaF9lcnJvciIsInNlYXJjaF9tb3JlIiwic2VhcmNoX25vX3Jlc3VsdHMiLCJzZWFyY2hfaGludCIsInNlYXJjaF9yZWNlbnRfc2VhcmNoZXMiLCJzZWFyY2hfb2ZmbGluZV9saW5lXzEiLCJzZWFyY2hfb2ZmbGluZV9saW5lXzIiLCJuZXdfcmVhZGluZ19pbnZhbGlkX2Vycm9yX2hlYWRpbmciLCJuZXdfcmVhZGluZ19pbnZhbGlkX2Vycm9yX2Rlc2NyaXB0aW9uIiwibmV3X3JlYWRpbmdfaW52YWxpZF9lcnJvcl9vayIsIm5ld19yZWFkaW5nX3Vua25vd25fZXJyb3JfaGVhZGluZyIsIm5ld19yZWFkaW5nX3Vua25vd25fZXJyb3JfZGVzY3JpcHRpb24iLCJuZXdfcmVhZGluZ191bmtub3duX2Vycm9yX29rIiwibmV3X3JlYWRpbmdfc2F2ZWRfcG9wdXBfdGl0bGUiLCJuZXdfcmVhZGluZ19zYXZlZCIsIm5ld19yZWFkaW5nX3dhcm5pbmdfbG9naW5fcmVxdWlyZWQiLCJuZXdfcmVhZGluZ19kaWFsb2dfb25lX21vcmUiLCJuZXdfcmVhZGluZ19kaWFsb2dfZG9uZSIsIm5ld19yZWFkaW5nX2RhdGVfZmllbGQiLCJuZXdfcmVhZGluZ19kYXRlX2ZpZWxkX2ludmFsaWQiLCJuZXdfcmVhZGluZ192YWx1ZV9maWVsZCIsInVuaXRzIiwibmV3X3JlYWRpbmdfdmFsdWVfZmllbGRfaW52YWxpZCIsIm5ld19yZWFkaW5nX3RpbWVzZXJpZXMiLCJuZXdfcmVhZGluZ19zYXZlX2J1dHRvbiIsImNvbm5lY3RfdG9fc2VydmljZV91c2VybmFtZV9maWVsZCIsImNvbm5lY3RfdG9fc2VydmljZV91c2VybmFtZV9pbnZhbGlkIiwiY29ubmVjdF90b19zZXJ2aWNlX3Bhc3N3b3JkX2ZpZWxkIiwiY29ubmVjdF90b19zZXJ2aWNlX3Bhc3N3b3JkX2ludmFsaWQiLCJjb25uZWN0X3RvX3NlcnZpY2VfbW9iaWxlX2ZpZWxkIiwiY29ubmVjdF90b19zZXJ2aWNlX21vYmlsZV9pbnZhbGlkIiwiY29ubmVjdF90b19zZXJ2aWNlX3ZlcmlmeV9maWVsZCIsImNvbm5lY3RfdG9fc2VydmljZV92ZXJpZnlfaW52YWxpZCIsImNvbm5lY3RfdG9fc2VydmljZV9sb2dvdXRfYnV0dG9uIiwiY29ubmVjdF90b19zZXJ2aWNlX3N1Ym1pdF9idXR0b24iLCJjb25uZWN0X3RvX3NlcnZpY2VfZGVzY3JpcHRpb24iLCJjb25uZWN0X3RvX3NlcnZpY2VfY29ubmVjdGVkX3Rlc3QiLCJmaWVsZE5hbWUiLCJ1c2VybmFtZSIsImNvbm5lY3RfdG9fc2VydmljZV9lcnJvciIsImNvbm5lY3RfdG9fc2VydmljZV9vcmdfc2VsZWN0b3IiLCJmYXZvdXJpdGVfcmVzb3VyY2VfaGVhZGluZyIsImZhdm91cml0ZV9yZXNvdXJjZV9oaW50XzEiLCJmYXZvdXJpdGVfcmVzb3VyY2VfaGludF8yIiwicmVjZW50X3Jlc291cmNlX2hlYWRpbmciLCJyZWNlbnRfcmVzb3VyY2Vfbm9uZSIsInJlc291cmNlX2RldGFpbF9sYXRlc3QiLCJyZXNvdXJjZV9kZXRhaWxfbmV3Iiwic3luY19sb2dpbl9tZXNzYWdlIiwic3luY19zdGFydF9zeW5jX2J1dHRvbiIsInN5bmNfc3RhcnRfc3luY19idXR0b25fbG9hZGluZyIsInN5bmNfc2VjdGlvbl9yZXNvdXJjZXMiLCJzeW5jX3NlY3Rpb25fcmVhZGluZ3MiLCJzeW5jX2VtcHR5X2hlYWRpbmciLCJzeW5jX2VtcHR5X2NvbnRlbnQiLCJzZWxlY3RfbGFuZ3VhZ2VfaGVhZGluZyIsInJlc291cmNlX2RldGFpbF9zdW1tYXJ5X3RhYiIsInJlc291cmNlX2RldGFpbF9lbXB0eV9oZWFkaW5nIiwicmVzb3VyY2VfZGV0YWlsX2VtcHR5X2hpbnQiLCJuZXdfcmVzb3VyY2Vfc2F2ZWRfZGlhbG9nIiwibmV3X3Jlc291cmNlX3NhdmVkX2RpYWxvZ193YXJuaW5nIiwicmVzb3VyY2VfbmFtZSIsIm5ld19yZXNvdXJjZV9sYXQiLCJuZXdfcmVzb3VyY2VfbG5nIiwibmV3X3Jlc291cmNlX2Fzc2V0X3R5cGVfbGFiZWwiLCJuZXdfcmVzb3VyY2Vfb3duZXJfbmFtZV9sYWJlbCIsIm5ld19yZXNvdXJjZV9zdWJtaXRfYnV0dG9uIiwicmVzb3VyY2VfZGV0YWlsX25hbWVfbGFiZWwiLCJuZXdfcmVzb3VyY2VfaWQiLCJuZXdfcmVzb3VyY2VfaWRfY2hlY2tfZXJyb3IiLCJuZXdfcmVzb3VyY2VfaWRfY2hlY2tfdGFrZW4iLCJxcl9jb2RlX25vdF9mb3VuZCIsImNhbGVuZGFyX2lucHV0X2NvbmZpcm0iLCJjYWxlbmRhcl9pbnB1dF9jYW5jZWwiLCJ0aW1lc2VyaWVzX25hbWVfdGl0bGUiLCJ0c05hbWUiLCJ0b0xvd2VyQ2FzZSIsInJlc291cmNlX2RldGFpbF9oZWFkaW5nX2xhYmVsIiwidGltZXNlcmllc19kYXRlX2Zvcm1hdCIsInJlc291cmNlX2RldGFpbF9uZXdfcmVhZGluZ19idXR0b24iLCJzeW5jX21hbnVhbF90ZXh0Iiwic3luY19tYW51YWxfc2hvd19tZV9ob3ciLCJzeW5jX2RhdGVfZm9ybWF0Iiwic3luY19lcnJvcl9zdGF0aW9uX25vdF9jcmVhdGVkIiwic3luY19lcnJvcl9nZXRfdGltZXNlcmllc19pZF90cmFuc3BvcnQiLCJzeW5jX2Vycm9yX2dldF90aW1lc2VyaWVzX2lkX25vbmUiLCJzeW5jX2Vycm9yX2dldF90aW1lc2VyaWVzX2lkX3Rvb19tYW55Iiwic3luY19lcnJvcl9nZXRfdGltZXNlcmllc19pZF9ub190aW1lc2VyaWVzIiwic3luY19lcnJvcl9zYXZlX3JlYWRpbmdfbm90X2xvZ2dlZF9pbiIsInN5bmNfZXJyb3JfZ2VuZXJpY190cmFuc3BvcnQiLCJzeW5jX2Vycm9yX3NhdmVfcmVhZGluZ191bmtub3duIiwic3luY19lcnJvcl9kZWxldGVfcGVuZGluZ19yZWFkaW5nIiwic3luY19lcnJvcl91bmtub3duIiwic3luY19lbWFpbF9lcnJvciIsInN5bmNfZW1haWxfc3VjY2VzcyIsInN5bmNfc2NyZWVuX2hlYWRpbmciLCJzeW5jX3NjcmVlbl9zdGVwXzFfaGVhZGluZyIsInN5bmNfc2NyZWVuX3N0ZXBfMV9ib2R5Iiwic3luY19zY3JlZW5fc3RlcF8yX2hlYWRpbmciLCJzeW5jX3NjcmVlbl9zdGVwXzJfYm9keSIsInN5bmNfc2NyZWVuX3N0ZXBfM19oZWFkaW5nIiwic3luY19zY3JlZW5fc3RlcF8zX2JvZHkiLCJzeW5jX3NjcmVlbl9zdGVwXzRfaGVhZGluZyIsInN5bmNfc2NyZWVuX3N0ZXBfNF9ib2R5Iiwic3luY19zY3JlZW5faGVscF9oZWFkaW5nIiwic3luY19zY3JlZW5faGVscF9ib2R5Iiwic3luY19zY3JlZW5fc2VuZF9lbWFpbF9idXR0b24iLCJzZXR0aW5nc19sYW5ndWFnZSIsInRpbWVzZXJpZXNfbm9uZSIsInJlc291cmNlX2RldGFpbF9uZXdfcmVhZGluZyIsImNvbm5lY3RfdG9fZXJyb3JfbWVzc2FnZSIsImNvbm5lY3RfdG9faW52YWxpZF9waG9uZV9udW1iZXIiLCJjb25uZWN0X3RvX2xvZ2luX2NvZGUiLCJtb2JpbGUiLCJjb25uZWN0X3RvX3Jlc2VuZCIsImNvbm5lY3RfdG9fc2lnbmVkX2luX2hlYWRpbmciLCJjb25uZWN0X3RvX2VkaXQiLCJjb25uZWN0X3RvX25hbWVfbGFiZWwiLCJjb25uZWN0X3RvX25pY2tuYW1lX2xhYmVsIiwiY29ubmVjdF90b19lbWFpbF9sYWJlbCIsImNvbm5lY3RfdG9fcHJvZmlsZV9tb2JpbGUiLCJjb25uZWN0X3RvX3NpZ25fb3V0IiwibWVudV93ZWxsIiwibWVudV9yYWluZmFsbCIsIm1lbnVfd2F0ZXJfcXVhbGl0eSIsIm1lbnVfY2hlY2tkYW0iLCJzY2FuX2hpbnQiLCJzeW5jX3NjcmVlbl9zdGVwXzVfaGVhZGluZyIsInN5bmNfc2NyZWVuX3N0ZXBfNV9ib2R5IiwidGltZXNlcmllc19jYXJkX25vdF9lbm91Z2giLCJyZXNvdXJjZV9kZXRhaWxfZWRpdF9yZXNvdXJjZSIsInJlc291cmNlX2RldGFpbF9lZGl0X3JlYWRpbmdzIiwibmV3X3Jlc291cmNlX25hbWUiLCJlZGl0X3Jlc291cmNlX2RlbGV0ZV9idXR0b24iLCJnZW5lcmFsX2lzX3JlcXVpcmVkX2Vycm9yIiwic3luY19zY3JlZW5faGVscF9lbWFpbCIsInN5bmNfc2NyZWVuX2hlbHBfZW5kIiwicmVzb3VyY2VfZW1haWxfc3ViamVjdCIsInJlc291cmNlX2VtYWlsX21lc3NhZ2UiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7Ozs7O0FBU0EsSUFBTUEsS0FBc0IsR0FBRztBQUM3QkMsRUFBQUEsUUFBUSxFQUFFO0FBQ1JDLElBQUFBLFFBQVEsRUFBRSxTQURGO0FBRVJDLElBQUFBLE1BQU0sRUFBRTtBQUZBLEdBRG1CO0FBSzdCQyxFQUFBQSxTQUFTLEVBQUU7QUFDVEMsSUFBQUEsdUJBQXVCLEVBQUUsb0RBRGhCO0FBRVRDLElBQUFBLHNCQUFzQixFQUFFLDhDQUZmO0FBR1RDLElBQUFBLGlDQUFpQyxFQUFFLFVBSDFCO0FBSVRDLElBQUFBLG1DQUFtQyxFQUFFLFVBSjVCO0FBS1RDLElBQUFBLGtDQUFrQyxFQUFFLFVBTDNCO0FBTVRDLElBQUFBLG9CQUFvQixFQUFFLG1CQU5iO0FBT1RDLElBQUFBLHFCQUFxQixFQUFFLGFBUGQ7QUFRVEMsSUFBQUEscUJBQXFCLEVBQUUsc0JBUmQ7QUFTVEMsSUFBQUEsY0FB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KlxuICogRG8gbm90IGVkaXQgdGhpcyBmaWxlIGRpcmVjdGx5LiBcbiAqIEluc3RlYWQsIGVkaXQgdGhlIGFwcHJvcHJpYXRlIHNwcmVhZHNoZWV0IFxuICogaHR0cHM6Ly9kb2NzLmdvb2dsZS5jb20vc3ByZWFkc2hlZXRzL2QvMTAyekxxRVdqNHhscXFOZ1ZVRkNpTUxxZGN2YUxZNkdudFMxeG1sSGRBRTgvZWRpdCNnaWQ9MFxuICogYW5kIHJlY29tcGlsZSBpbiBvcmRlciB0byBjaGFuZ2UgdGhlc2UgZmllbGRzXG4gKi9cblxuaW1wb3J0IHsgVHJhbnNsYXRpb25GaWxlIH0gZnJvbSBcIi4uL1R5cGVzXCI7XG5cbmNvbnN0IGVuX1VTOiBUcmFuc2xhdGlvbkZpbGUgPSB7XG4gIG1ldGFkYXRhOiB7XG4gICAgbGFuZ3VhZ2U6ICdlbmdsaXNoJyxcbiAgICByZWdpb246ICd1bml0ZWQgc3RhdGVzJyxcbiAgfSxcbiAgdGVtcGxhdGVzOiB7XG4gICAgYXBwX3Jlc291cmNlX2xvYWRfZXJyb3I6IFwiRXJyb3IgbG9hZGluZyByZWFkaW5nIGxvY2F0aW9ucy4gUGxlYXNlIHRyeSBhZ2Fpbi5cIixcbiAgICBhcHBfcmVzb3VyY2Vfbm90X2ZvdW5kOiBcIkNvdWxkIG5vdCBmaW5kIHRoZSBzZWxlY3RlZCByZWFkaW5nIGxvY2F0aW9uXCIsXG4gICAgc2V0dGluZ3NfY29ubmVjdF90b19wZW5kaW5nX3RpdGxlOiBcIk9WRVJSSURFXCIsXG4gICAgc2V0dGluZ3NfY29ubmVjdF90b19jb25uZWN0ZWRfdGl0bGU6IFwiT1ZFUlJJREVcIixcbiAgICBzZXR0aW5nc19jb25uZWN0X3RvX3N1YnRpdGxlX2Vycm9yOiBcIk9WRVJSSURFXCIsXG4gICAgc2V0dGluZ3NfbG9naW5fZXJyb3I6IFwiRXJyb3IgbG9nZ2luZyBpbi5cIixcbiAgICBzZXR0aW5nc19zeW5jX2hlYWRpbmc6IFwiTXlXZWxsIFN5bmNcIixcbiAgICBzZXR0aW5nc19uZXdfcmVzb3VyY2U6IFwiTmV3IHJlYWRpbmcgTG9jYXRpb25cIixcbiAgICBzZWFyY2hfaGVhZGluZzogXCJTZWFyY2hcIixcbiAgICBzZWFyY2hfZXJyb3I6IFwiQ291bGRuJ3QgcGVyZm9ybSBzZWFyY2guIFBsZWFzZSB0cnkgYWdhaW4uXCIsXG4gICAgc2VhcmNoX21vcmU6IFwiTW9yZS4uLlwiLFxuICAgIHNlYXJjaF9ub19yZXN1bHRzOiBcIk5vIFJlc3VsdHMgRm91bmRcIixcbiAgICBzZWFyY2hfaGludDogXCJTZWFyY2ggQnkgSWRcIixcbiAgICBzZWFyY2hfcmVjZW50X3NlYXJjaGVzOiBcIlJlY2VudCBTZWFyY2hlc1wiLFxuICAgIHNlYXJjaF9vZmZsaW5lX2xpbmVfMTogXCJZb3UgYXJlIGN1cnJlbnRseSBvZmZsaW5lLlwiLFxuICAgIHNlYXJjaF9vZmZsaW5lX2xpbmVfMjogXCJTaG93aW5nIGxpbWl0ZWQgc2VhcmNoIHJlc3VsdHMuXCIsXG4gICAgbmV3X3JlYWRpbmdfaW52YWxpZF9lcnJvcl9oZWFkaW5nOiBcIkVycm9yXCIsXG4gICAgbmV3X3JlYWRpbmdfaW52YWxpZF9lcnJvcl9kZXNjcmlwdGlvbjogXCJJbnZhbGlkIHJlYWRpbmcuIFBsZWFzZSBjaGVjayBhbmQgdHJ5IGFnYWluLlwiLFxuICAgIG5ld19yZWFkaW5nX2ludmFsaWRfZXJyb3Jfb2s6IFwiT0tcIixcbiAgICBuZXdfcmVhZGluZ191bmtub3duX2Vycm9yX2hlYWRpbmc6IFwiRXJyb3JcIixcbiAgICBuZXdfcmVhZGluZ191bmtub3duX2Vycm9yX2Rlc2NyaXB0aW9uOiBcIlRoZXJlIHdhcyBhIHByb2JsZW0gc2F2aW5nIHlvdXIgcmVhZGluZy4gUGxlYXNlIHRyeSBhZ2Fpbi5cIixcbiAgICBuZXdfcmVhZGluZ191bmtub3duX2Vycm9yX29rOiBcIk9LXCIsXG4gICAgbmV3X3JlYWRpbmdfc2F2ZWRfcG9wdXBfdGl0bGU6IFwiXCIsXG4gICAgbmV3X3JlYWRpbmdfc2F2ZWQ6IFwiUmVhZGluZyBTYXZlZFwiLFxuICAgIG5ld19yZWFkaW5nX3dhcm5pbmdfbG9naW5fcmVxdWlyZWQ6IFwiUmVhZGluZyBzYXZlZCBsb2NhbGx5IG9ubHkuIExvZ2luIHdpdGggTXlXZWxsIHRvIHNhdmUgaW4gY2xvdWQuXCIsXG4gICAgbmV3X3JlYWRpbmdfZGlhbG9nX29uZV9tb3JlOiBcIk9uZSBNb3JlXCIsXG4gICAgbmV3X3JlYWRpbmdfZGlhbG9nX2RvbmU6IFwiRG9uZVwiLFxuICAgIG5ld19yZWFkaW5nX2RhdGVfZmllbGQ6IFwiUmVhZGluZyBEYXRlXCIsXG4gICAgbmV3X3JlYWRpbmdfZGF0ZV9maWVsZF9pbnZhbGlkOiBcIkludmFsaWQgRGF0ZVwiLFxuICAgIG5ld19yZWFkaW5nX3ZhbHVlX2ZpZWxkOiAodW5pdHM6IHN0cmluZykgPT4gYE1lYXN1cmVtZW50IGluICR7dW5pdHN9YCxcbiAgICBuZXdfcmVhZGluZ192YWx1ZV9maWVsZF9pbnZhbGlkOiBcIkludmFsaWQgTWVhc3VyZW1lbnRcIixcbiAgICBuZXdfcmVhZGluZ190aW1lc2VyaWVzOiBcIk4vQVwiLFxuICAgIG5ld19yZWFkaW5nX3NhdmVfYnV0dG9uOiBcIlNhdmVcIixcbiAgICBjb25uZWN0X3RvX3NlcnZpY2VfdXNlcm5hbWVfZmllbGQ6IFwiTi9BXCIsXG4gICAgY29ubmVjdF90b19zZXJ2aWNlX3VzZXJuYW1lX2ludmFsaWQ6IFwiTi9BXCIsXG4gICAgY29ubmVjdF90b19zZXJ2aWNlX3Bhc3N3b3JkX2ZpZWxkOiBcIk4vQVwiLFxuICAgIGNvbm5lY3RfdG9fc2VydmljZV9wYXNzd29yZF9pbnZhbGlkOiBcIk4vQVwiLFxuICAgIGNvbm5lY3RfdG9fc2VydmljZV9tb2JpbGVfZmllbGQ6IFwiUGhvbmUgbnVtYmVyXCIsXG4gICAgY29ubmVjdF90b19zZXJ2aWNlX21vYmlsZV9pbnZhbGlkOiBcIlBob25lIG51bWJlciBpcyByZXF1aXJlZFwiLFxuICAgIGNvbm5lY3RfdG9fc2VydmljZV92ZXJpZnlfZmllbGQ6IFwiRW50ZXIgdGhlIDQgZGlnaXQgY29kZSB3ZSBzZW50IHlvdS5cIixcbiAgICBjb25uZWN0X3RvX3NlcnZpY2VfdmVyaWZ5X2ludmFsaWQ6IFwiWW91IGVudGVyZWQgdGhlIHdyb25nIGNvZGUuIFBsZWFzZSB0cnkgYWdhaW4uXCIsXG4gICAgY29ubmVjdF90b19zZXJ2aWNlX2xvZ291dF9idXR0b246IFwiTG9nIE91dFwiLFxuICAgIGNvbm5lY3RfdG9fc2VydmljZV9zdWJtaXRfYnV0dG9uOiBcIlwiLFxuICAgIGNvbm5lY3RfdG9fc2VydmljZV9kZXNjcmlwdGlvbjogXCJcIixcbiAgICBjb25uZWN0X3RvX3NlcnZpY2VfY29ubmVjdGVkX3Rlc3Q6IChmaWVsZE5hbWU6IHN0cmluZywgdXNlcm5hbWU6IHN0cmluZykgPT4gYFlvdSBhcmUgY29ubmVjdGVkIHRvIE15V2VsbCB3aXRoIHRoZSAke2ZpZWxkTmFtZX06ICR7dXNlcm5hbWV9YCxcbiAgICBjb25uZWN0X3RvX3NlcnZpY2VfZXJyb3I6IFwiRXJyb3Igc2lnbmluZyBpbi4gUGxlYXNlIHRyeSBhZ2FpblwiLFxuICAgIGNvbm5lY3RfdG9fc2VydmljZV9vcmdfc2VsZWN0b3I6IFwiTi9BXCIsXG4gICAgZmF2b3VyaXRlX3Jlc291cmNlX2hlYWRpbmc6IFwiRmF2b3JpdGVzXCIsXG4gICAgZmF2b3VyaXRlX3Jlc291cmNlX2hpbnRfMTogXCJQcmVzcyB0aGVcIixcbiAgICBmYXZvdXJpdGVfcmVzb3VyY2VfaGludF8yOiBcImJ1dHRvbiB0byBhZGQgYSBmYXZvdXJpdGVcIixcbiAgICByZWNlbnRfcmVzb3VyY2VfaGVhZGluZzogXCJSZWNlbnRzXCIsXG4gICAgcmVjZW50X3Jlc291cmNlX25vbmU6IFwiTm8gcmVjZW50IGxvY2F0aW9uc1wiLFxuICAgIHJlc291cmNlX2RldGFpbF9sYXRlc3Q6IFwiTGF0ZXN0IHJlYWRpbmdzXCIsXG4gICAgcmVzb3VyY2VfZGV0YWlsX25ldzogXCJOZXcgUmVhZGluZ1wiLFxuICAgIHN5bmNfbG9naW5fbWVzc2FnZTogXCJMb2dpbiB0byBzeW5jIHdpdGggTXlXZWxsXCIsXG4gICAgc3luY19zdGFydF9zeW5jX2J1dHRvbjogXCJTdGFydCBTeW5jXCIsXG4gICAgc3luY19zdGFydF9zeW5jX2J1dHRvbl9sb2FkaW5nOiBcIlN5bmNpbmcgd2l0aCBNeVdlbGxcIixcbiAgICBzeW5jX3NlY3Rpb25fcmVzb3VyY2VzOiBcIlJlYWRpbmcgTG9jYXRpb25zXCIsXG4gICAgc3luY19zZWN0aW9uX3JlYWRpbmdzOiBcIlJlYWRpbmdzXCIsXG4gICAgc3luY19lbXB0eV9oZWFkaW5nOiBcIk5vdGhpbmcgdG8gc3luYyFcIixcbiAgICBzeW5jX2VtcHR5X2NvbnRlbnQ6IFwiU3RhcnQgdGFraW5nIHJlYWRpbmdzIG9yIGNyZWF0aW5nIGdyb3VuZHdhdGVyIHN0YXRpb25zIHRvIGdldCBzdGFydGVkLlwiLFxuICAgIHNlbGVjdF9sYW5ndWFnZV9oZWFkaW5nOiBcIlwiLFxuICAgIHJlc291cmNlX2RldGFpbF9zdW1tYXJ5X3RhYjogXCJcIixcbiAgICByZXNvdXJjZV9kZXRhaWxfZW1wdHlfaGVhZGluZzogXCJcIixcbiAgICByZXNvdXJjZV9kZXRhaWxfZW1wdHlfaGludDogXCJcIixcbiAgICBuZXdfcmVzb3VyY2Vfc2F2ZWRfZGlhbG9nOiBcIlwiLFxuICAgIG5ld19yZXNvdXJjZV9zYXZlZF9kaWFsb2dfd2FybmluZzogXCJcIixcbiAgICByZXNvdXJjZV9uYW1lOiBcIlwiLFxuICAgIG5ld19yZXNvdXJjZV9sYXQ6IFwiXCIsXG4gICAgbmV3X3Jlc291cmNlX2xuZzogXCJcIixcbiAgICBuZXdfcmVzb3VyY2VfYXNzZXRfdHlwZV9sYWJlbDogXCJcIixcbiAgICBuZXdfcmVzb3VyY2Vfb3duZXJfbmFtZV9sYWJlbDogXCJcIixcbiAgICBuZXdfcmVzb3VyY2Vfc3VibWl0X2J1dHRvbjogXCJcIixcbiAgICByZXNvdXJjZV9kZXRhaWxfbmFtZV9sYWJlbDogXCJcIixcbiAgICBuZXdfcmVzb3VyY2VfaWQ6IFwiXCIsXG4gICAgbmV3X3Jlc291cmNlX2lkX2NoZWNrX2Vycm9yOiBcIlwiLFxuICAgIG5ld19yZXNvdXJjZV9pZF9jaGVja190YWtlbjogXCJcIixcbiAgICBxcl9jb2RlX25vdF9mb3VuZDogXCJcIixcbiAgICBjYWxlbmRhcl9pbnB1dF9jb25maXJtOiBcIlwiLFxuICAgIGNhbGVuZGFyX2lucHV0X2NhbmNlbDogXCJcIixcbiAgICB0aW1lc2VyaWVzX25hbWVfdGl0bGU6ICh0c05hbWU6IHN0cmluZykgPT4ge1xuICAgIHN3aXRjaCAodHNOYW1lLnRvTG93ZXJDYXNlKCkpIHtcbiAgICAgIGNhc2UgJ2d3bWJncyc6IHJldHVybiBgR3JvdW5kd2F0ZXIgbGV2ZWwgYmVsb3cgZ3JvdW5kIHN1cmZhY2VgXG4gICAgICBjYXNlICdnd21tc2wnOlxuICAgICAgZGVmYXVsdDogcmV0dXJuIGBHcm91bmR3YXRlciBsZXZlbCBiZWxvdyBncm91bmQgc3VyZmFjZWBcbiAgICB9XG4gIH0sXG4gICAgcmVzb3VyY2VfZGV0YWlsX2hlYWRpbmdfbGFiZWw6IFwiSUQ6IFwiLFxuICAgIHRpbWVzZXJpZXNfZGF0ZV9mb3JtYXQ6IFwiWVlZWS1NTS1ERFwiLFxuICAgIHJlc291cmNlX2RldGFpbF9uZXdfcmVhZGluZ19idXR0b246IFwiTkVXIFJFQURJTkdcIixcbiAgICBzeW5jX21hbnVhbF90ZXh0OiBcIkdST1VORFdBVEVSIFNUQVRJT05TIE5FRUQgVE8gQkUgU1lOQ0VEIE1BTlVBTExZXCIsXG4gICAgc3luY19tYW51YWxfc2hvd19tZV9ob3c6IFwiU0hPVyBNRSBIT1dcIixcbiAgICBzeW5jX2RhdGVfZm9ybWF0OiBcIllZWVktTU0tRERcIixcbiAgICBzeW5jX2Vycm9yX3N0YXRpb25fbm90X2NyZWF0ZWQ6IFwiU1RBVElPTiBIQVNOJ1QgQkVFTiBDUkVBVEVEIFlFVC5cIixcbiAgICBzeW5jX2Vycm9yX2dldF90aW1lc2VyaWVzX2lkX3RyYW5zcG9ydDogXCJSRVFVRVNUIEZBSUxFRCBPUiBUSU1FRCBPVVQuIFBMRUFTRSBUUlkgQUdBSU4uXCIsXG4gICAgc3luY19lcnJvcl9nZXRfdGltZXNlcmllc19pZF9ub25lOiBcIkNPVUxEIE5PVCBGSU5EIFRJTUVTRVJJRVNcIixcbiAgICBzeW5jX2Vycm9yX2dldF90aW1lc2VyaWVzX2lkX3Rvb19tYW55OiBcIkNPVUxEIE5PVCBGSU5EIFRJTUVTRVJJRVNcIixcbiAgICBzeW5jX2Vycm9yX2dldF90aW1lc2VyaWVzX2lkX25vX3RpbWVzZXJpZXM6IFwiQ09VTEQgTk9UIEZJTkQgVElNRVNFUklFU1wiLFxuICAgIHN5bmNfZXJyb3Jfc2F2ZV9yZWFkaW5nX25vdF9sb2dnZWRfaW46IFwiWU9VIE1VU1QgQkUgTE9HR0VEIElOIFRPIFBFUkZPUk0gQSBTWU5DLlwiLFxuICAgIHN5bmNfZXJyb3JfZ2VuZXJpY190cmFuc3BvcnQ6IFwiUkVRVUVTVCBGQUlMRUQgT1IgVElNRUQgT1VULiBQTEVBU0UgVFJZIEFHQUlOLlwiLFxuICAgIHN5bmNfZXJyb3Jfc2F2ZV9yZWFkaW5nX3Vua25vd246IFwiQU4gVU5LTk9XTiBFUlJPUiBPQ0NPVVJFRFwiLFxuICAgIHN5bmNfZXJyb3JfZGVsZXRlX3BlbmRpbmdfcmVhZGluZzogXCJDTEVBTlVQIEVSUk9SXCIsXG4gICAgc3luY19lcnJvcl91bmtub3duOiBcIkFOIFVOS05PV04gRVJST1IgT0NDT1VSRURcIixcbiAgICBzeW5jX2VtYWlsX2Vycm9yOiBcIlRIRVJFIFdBUyBBIFBST0JMRU0gU0VORElORyBUSEUgRU1BSUwuIFBMRUFTRSBUUlkgQUdBSU4uXCIsXG4gICAgc3luY19lbWFpbF9zdWNjZXNzOiBcIkVNQUlMIFNFTlQhXCIsXG4gICAgc3luY19zY3JlZW5faGVhZGluZzogXCJJTiBPUkRFUiBUTyBGSU5JU0ggU0FWSU5HIFlPVVIgR1JPVU5EV0FURVIgU1RBVElPTlMgVE8gR0dNTiwgWU9VIE5FRUQgVE8gTUFOVUFMTFkgUkVHSVNURVIgVEhFTSBPTiBUSEUgR0dNTiBTSVRFLlwiLFxuICAgIHN5bmNfc2NyZWVuX3N0ZXBfMV9oZWFkaW5nOiBcIlNURVAgMS5cIixcbiAgICBzeW5jX3NjcmVlbl9zdGVwXzFfYm9keTogXCJDTElDSyBUSEUgJ1NFTkQgRU1BSUwnIEJVVFRPTiBCRUxPVyBUTyBTRU5EIEFOIEVNQUlMIFRPIFlPVVIgR0dNTiBBQ0NPVU5ULiBUSElTIEVNQUlMIFdJTEwgQ09OVEFJTiBUSEUgU0hBUEVGSUxFUyBORUVERUQgVE8gUkVHSVNURVIgVEhFIEdST1VORFdBVEVSIFNUQVRJT05TXCIsXG4gICAgc3luY19zY3JlZW5fc3RlcF8yX2hlYWRpbmc6IFwiU1RFUCAyLlwiLFxuICAgIHN5bmNfc2NyZWVuX3N0ZXBfMl9ib2R5OiBcIk9OQ0UgWU9VIEhBVkUgUkVDSUVWRUQgVEhFIEVNQUlMLCBMT0cgSU5UTyBHR01OIEFUIEhUVFBTOi8vR0dNTi5VTi1JR1JBQy5PUkcvIEFORCBTRUxFQ1QgJ1VQTE9BRCcgSU4gVEhFIFRPUCBSSUdIVCBDT1JORVIuXCIsXG4gICAgc3luY19zY3JlZW5fc3RlcF8zX2hlYWRpbmc6IFwiU1RFUCAzLlwiLFxuICAgIHN5bmNfc2NyZWVuX3N0ZXBfM19ib2R5OiBcIlNDUk9MTCBET1dOIFRPICdJTVBPUlQgQSBTVUZIWUQgT1IgU0hBUEUgRklMRScgU0VMRUNUIFRIRSBPUkdBTklTQVRJT04gWU9VUiBBQ0NPVU5UIElTIEFTU09DSUFURUQgV0lUSCwgQU5EIFRIRSBGSUxFIEZST00gVEhFIEVNQUlMLlwiLFxuICAgIHN5bmNfc2NyZWVuX3N0ZXBfNF9oZWFkaW5nOiBcIlNURVAgNC5cIixcbiAgICBzeW5jX3NjcmVlbl9zdGVwXzRfYm9keTogXCJPTkNFIFRISVMgSVMgRE9ORSwgTE9HIEJBQ0sgSU5UTyBHR01OIE9OIFlPVVIgREVWSUNFLCBBTkQgWU9VIFdJTEwgU0VFIFRIQVQgUkVTT1VSQ0VTIEhBVkUgQ0hBTkdFRCBDT0xPUiwgQU5EIEFORCBQRU5ESU5HIFJFQUFESU5HUyBXSUxMIFNUQVJUIFRPIFNBVkUuXCIsXG4gICAgc3luY19zY3JlZW5faGVscF9oZWFkaW5nOiBcIk5FRUQgU09NRSBIRUxQP1wiLFxuICAgIHN5bmNfc2NyZWVuX2hlbHBfYm9keTogXCJKVVNUIFJFQUNIIE9VVCBUTyBfX19fIEFUIF9fX18uIFdFJ0QgQkUgR0xBRCBUTyBBU1NJU1QgWU9VLlwiLFxuICAgIHN5bmNfc2NyZWVuX3NlbmRfZW1haWxfYnV0dG9uOiBcIlNFTkQgRU1BSUxcIixcbiAgICBzZXR0aW5nc19sYW5ndWFnZTogXCJMQU5HXCIsXG4gICAgdGltZXNlcmllc19ub25lOiBcIk5vIHRpbWVzZXJpZXMgZm91bmQgZm9yIHRoaXMgU3RhdGlvbi5cIixcbiAgICByZXNvdXJjZV9kZXRhaWxfbmV3X3JlYWRpbmc6IFwiTkVXIFJFQURJTkdcIixcbiAgICBjb25uZWN0X3RvX2Vycm9yX21lc3NhZ2U6IFwiRVJST1IgU0lHTklORyBJTi4gUExFQVNFIFRSWSBBR0FJTi5cIixcbiAgICBjb25uZWN0X3RvX2ludmFsaWRfcGhvbmVfbnVtYmVyOiBcIlBIT05FIE5VTUJFUiBJUyBJTlZBTElEXCIsXG4gICAgY29ubmVjdF90b19sb2dpbl9jb2RlOiAobW9iaWxlOiBzdHJpbmcpID0+IGBFbnRlciB0aGUgbG9naW4gY29kZSB3ZSBzZW50IHRvICR7bW9iaWxlfS4gT3Igd2FpdCBhcyB3ZSB2ZXJpZnkgeW91IGF1dG9tYXRpY2FsbHlgLFxuICAgIGNvbm5lY3RfdG9fcmVzZW5kOiBcIkRJRE4nVCBHRVQgVEhFIFRFWFQ/XCIsXG4gICAgY29ubmVjdF90b19zaWduZWRfaW5faGVhZGluZzogXCJZT1UgQVJFIFNJR05FRCBJTi5cIixcbiAgICBjb25uZWN0X3RvX2VkaXQ6IFwiRURJVFwiLFxuICAgIGNvbm5lY3RfdG9fbmFtZV9sYWJlbDogXCJGVUxMIE5BTUVcIixcbiAgICBjb25uZWN0X3RvX25pY2tuYW1lX2xhYmVsOiBcIlNIT1JUIE5BTUVcIixcbiAgICBjb25uZWN0X3RvX2VtYWlsX2xhYmVsOiBcIkVNQUlMXCIsXG4gICAgY29ubmVjdF90b19wcm9maWxlX21vYmlsZTogXCJNT0JJTEVcIixcbiAgICBjb25uZWN0X3RvX3NpZ25fb3V0OiBcIlNJR04gT1VUXCIsXG4gICAgbWVudV93ZWxsOiBcIldFTExTXCIsXG4gICAgbWVudV9yYWluZmFsbDogXCJSQUlORkFMTFwiLFxuICAgIG1lbnVfd2F0ZXJfcXVhbGl0eTogXCJXQVRFUiBRVUFMSVRZXCIsXG4gICAgbWVudV9jaGVja2RhbTogXCJDSEVDS0RBTVNcIixcbiAgICBzY2FuX2hpbnQ6IFwiXCIsXG4gICAgc3luY19zY3JlZW5fc3RlcF81X2hlYWRpbmc6IFwiXCIsXG4gICAgc3luY19zY3JlZW5fc3RlcF81X2JvZHk6IFwiXCIsXG4gICAgdGltZXNlcmllc19jYXJkX25vdF9lbm91Z2g6IFwiXCIsXG4gICAgcmVzb3VyY2VfZGV0YWlsX2VkaXRfcmVzb3VyY2U6IFwiXCIsXG4gICAgcmVzb3VyY2VfZGV0YWlsX2VkaXRfcmVhZGluZ3M6IFwiXCIsXG4gICAgbmV3X3Jlc291cmNlX25hbWU6IFwiXCIsXG4gICAgZWRpdF9yZXNvdXJjZV9kZWxldGVfYnV0dG9uOiBcIlwiLFxuICAgIGdlbmVyYWxfaXNfcmVxdWlyZWRfZXJyb3I6IFwiXCIsXG4gICAgc3luY19zY3JlZW5faGVscF9lbWFpbDogXCJcIixcbiAgICBzeW5jX3NjcmVlbl9oZWxwX2VuZDogXCJcIixcbiAgICByZXNvdXJjZV9lbWFpbF9zdWJqZWN0OiBcIlwiLFxuICAgIHJlc291cmNlX2VtYWlsX21lc3NhZ2U6IFwiXCIsXG4gIH1cbn1cblxuZXhwb3J0IHtlbl9VU307XG4iXX0=